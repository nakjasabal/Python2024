'''
format() 함수로 문자열 다루기
: 문자열 포매팅을 서식문자보다 좀 더 간단히 표현할 수 있다. 
중괄호 안에 포매팅을 지정하고, format 함수로 값을 삽입한다. 
'''

#직접 대입하기 
str1 = 'name : {0}'.format('홍길동')
print(str1) 

#변수로 대입하기 
age = 55
str2 = 'age : {0}'.format(age)
print(str2)

#지정된 변수에 값을 대입한 후 변수명으로 삽입 
str3 = 'name : {name}, age : {age}'.format(name='홍길동', age=33)
print(str3)

#인덱스를 입력하지 않으면 인자의 순서대로 매칭 
str4 = '이름 : {}, 나이 : {}'.format('이순신', 44)
print(str4)

#인덱스를 순서를 바꿀 수 있다. 
str5 = '나이 : {1}, 이름 : {0}'.format('이성계', 55)
print(str5)

#인덱스를 중복해서 사용할 수 있다. 
str6 = '항목1 : {0}, 항목2 : {1}, 항목3 : {0}'.format('서울','부산')
print(str6)

'''
정수 N자리 :  {인덱스:자리수 및 서식문자}
    {0:03d} => 0번 인덱스의 숫자를 3자리로 표현.
    만약 자리수를 초과하는 경우라면 그대로 출력하고
    자리수가 모자라는 경우에는 0을 채워서 표현한다. 
'''
str7 = '정수3자리 : {0:03d}, {1:03d}'.format(12345, 12)
print(str7)

'''
파이썬은 문장의 끝에 세미콜론을 사용하지 않으므로 코드를 줄바꿈해야
한다면 \(역슬러쉬)를 붙여서 연결되는 코드임을 명시해야한다. 
아래에서 역슬러쉬를 지우면 에러가 발생된다. 
'''
str8 = '소수점 아래 2자리 : {0:0.2f}, 소수점 아래 5자리 : {1:0.5f}'\
    .format(123.1234567, 3.14)
print(str8)

#드문 경우지만 중괄호 자체를 출력해야할때는 겹쳐서 기술한다. 
str9 = '{{ {0} }}'.format('Python 중괄호 표현')
print("str9=", str9)

#세자리마다 콤마를 출력 
str10 = 1592000
print(format(str10, ','))
