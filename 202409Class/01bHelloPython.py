'''
수학관련 여러가지 함수를 가지고 있는 math모듈을 현재
문서에 import(수입)한 후 팩토리얼 함수를 호출 
''' 
import math
print('math.factorial(5)', math.factorial(5))


print("================================")
print("String형")
print("================================")
str = """아래와같이 
여러줄에 걸쳐 문자열을 작성하고 싶으면
이와같이 더블쿼테이션을 3개 작성한다.
"""
print(str)

# 문자열 변수 생성 및 초기화  
head = "나는 헤더 "
bottom = " 나는 보텀"
# 문자열의 덧셈은 '합치기'의 결과 출력 
print(head + bottom) 
# 문자열의 곱셈은 '반복'의 결과 출력  
print(head * 3) 

'''
파이썬에서 문자열은 인덱스를 통해 접근할 수 있다. 
인덱스는 0부터 시작이고, 콜론을 사용했다면 범위를 지정할 수 있다. 
범위 사용시 0:10 으로 입력했다면 0~9까지를 의미한다. 
즉 '시작 이상 종료 미만'의 원칙이 적용된다. 
''' 
engStr = "Hello Python Good"
#0번 인덱스 : H 
print(engStr[0])
#시작인덱스가 없으면 처음부터 시작한다. 따라서 0~2까지 : Hel
print(engStr[:3])
#1~2까지만 슬라이싱한다. : el  
print(engStr[1:3])
#종료인덱스가 없으면 끝까지를 지정한다. : 1~마지막까지  
print(engStr[1:]) 

#파이썬에서는 영어와 한글을 동일한 인덱스로 접근할 수 있다.  
korStr = "안녕하세요? 파이썬입니다."
#0번인덱스 : 안
print(korStr[0])
#0~1까지 : 안녕
print(korStr[:2])
#0~5까지 : 안녕하세요? 
print(korStr[0:6])


'''
format()
  : 문자열을 format() 함수를 사용하면 좀더 발전된 스타일로 문자열
  서식을 지정할 수 있다. 
  형식] format(0번인덱스, 1번인덱스, ... N)
    사용시에는 {인덱스}와 같이 사용한다. 
''' 
print("{0}는 중복되지않는 숫자 {1}개로 구성된다".format("Lotto", 6)) 
print("{1}는 중복되지않는 숫자 {0}개로 구성된다".format("Lotto", 6)) 

'''
인덱스 대신 변수를 사용하는 방법으로 default값을 지정하는 경우
변수명=값 으로 사용할 수 있다. 
''' 
menu1 = "치킨"
menu2 = "맥주"
print("오늘 {str}은 {0}과 {1}로 정했다".format(menu1, menu2, str="저녁"))
